---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always


fleet_script_tasks : &fleet_script_tasks
      script:
        - python --version
fleet_install_tasks : &fleet_install_tasks
      install:
        - pip install -r requirements.txt


matrix:
  fast_finish: true
  include:

    - name: "multipass k3s Python 3.7 on bionic amd64" #OK
      os: linux
      dist: bionic
      arch: amd64
      addons:
        snaps:
          - name: multipass
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      script:
        - sudo multipass launch --name node1
        - sudo multipass exec node1 -- sudo sh -c "curl -sfL https://get.k3s.io | sh -"
        - TOKEN=`sudo multipass exec node1 -- sudo cat /var/lib/rancher/k3s/server/node-token`
        - echo $TOKEN
        - IP=`sudo multipass list --format csv | grep "^node1" | cut -d, -f3`
        - echo $IP
        - COUNT=7 &&  echo $COUNT
        - |
          for i in `seq 2 $COUNT`
          do
              sudo multipass launch --name node$i | tee /dev/null
              sudo multipass exec node$i -- sudo sh -c "curl -sfL https://get.k3s.io | K3S_URL=https://$IP:6443 K3S_TOKEN=$TOKEN sh -"
          done
        - sleep 10
        - sudo multipass exec node1 sudo kubectl get nodes
      after_success:
        - deactivate



# # #============================================================================ multiarch linux ============================================================================

    - name: "multipass beta channel k3s Python 3.7 on bionic arm64" #OK
      os: linux
      dist: bionic
      arch: arm64
      addons:
        snaps:
          - name: multipass
            confinement: classic # or devmode
            channel: latest/beta # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      script:
        - egrep -c '(vmx|svm)' /proc/cpuinfo | echo "virtualization is  supported" | echo "virtualization is not supported"
        # - sudo apt-get install -qqy cpu-checker #kvm-ok
        # - sudo kvm-ok #check whether the KVM is installed
        # - sudo apt-get install -qqy qemu-kvm libvirt-bin ubuntu-vm-builder bridge-utils
      after_success:
        - deactivate


# =============================================macOS=============================================

    #The default backend on macOS is hyperkit, wrapping Apple’s Hypervisor.framework
    #You need macOS Yosemite, version 10.10.3 or later installed on a 2010 or newer Mac
    #https://docs.travis-ci.com/user/reference/osx/#macos-version
    # https://multipass.run/docs/installing-on-macos
    # https://brew.sh/
    - name: "multipass on macOS 10.15.4 osx xcode11.5"
      os: osx
      osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
        - xcode11.5
      language: shell
      before_install:
        - pip install virtualenv
        - virtualenv -p $(which python2) ~venvpy2
        - source ~venvpy2/bin/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      script:
        - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        # - brew cask install multipass
        # - multipass version
        # - brew list --versions
      after_success:
        # - brew cask uninstall multipass
        - deactivate





# # #   # =============================================windows=============================================

#Multipass defaults to using Hyper-V as it’s virtualization provider
# https://multipass.run/docs/installing-on-windows
#https://github.com/canonical/multipass/releases
#https://github.com/canonical/multipass
    - name: "multipass  Python 3.8 on Windows"
      os: windows
      language: shell
      env:
        - PATH=/c/Python38:/c/Python38/Scripts:$PATH
      before_install:
        - choco install python --version 3.8.1
        - pip install virtualenv
        - virtualenv $HOME/venv
        - source $HOME/venv/Scripts/activate
      <<: *fleet_install_tasks
      <<: *fleet_script_tasks
      script:
        # - echo "choco install multipass" #- multipass (exited -1) - Error while running 'C:\ProgramData\chocolatey\lib\multipass\tools\chocolateyinstall.ps1'
        - choco install wget
        - wget https://github.com/canonical/multipass/releases/download/v1.2.1/multipass-1.2.1+win-win64.exe
        - dir
      after_success:
        - deactivate
