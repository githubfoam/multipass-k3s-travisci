---
sudo: required
dist: bionic

notifications:
  slack:
    on_failure: always

matrix:
  fast_finish: true
  include:

    - name: "openesb w snapped multipass k3s Python 3.7 on bionic amd64" #OK
      os: linux
      dist: bionic
      arch: amd64
      addons:
        snaps:
          - name: multipass
            confinement: classic # or devmode
            channel: latest/stable # will be passed to --channel flag
          # - name: kubectl
          #   confinement: classic # or devmode
          #   channel: latest/stable # will be passed to --channel flag
      language: python
      python: 3.7
      before_install:
        - pip3 install virtualenv
        - virtualenv -p $(which python3) ~venvpy3
        - source ~venvpy3/bin/activate
        - pip install -r requirements.txt
      script:
        - sudo make deploy-multipass
        # - sudo make deploy-openesb
      after_success:
        - deactivate

# #============================================================================ multiarch linux ============================================================================

    # - name: "multipass k3s Python 3.7 on bionic arm64" #OK
    #   os: linux
    #   dist: bionic #Unable to load KVM support. Please ensure KVM is installed on your machine.
    #   arch: arm64
    #   addons:
    #     snaps:
    #       - name: multipass
    #         confinement: classic # or devmode
    #         channel: latest/beta # will be passed to --channel flag
    #       # - name: kubectl
    #       #   confinement: classic # or devmode
    #       #   channel: latest/stable # will be passed to --channel flag
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   after_success:
    #     - deactivate

    # - name: "multipass k3s Python 3.7 on xenial arm64" #OK
    #   os: linux
    #   dist: xenial #Unable to load KVM support. Please ensure KVM is installed on your machine.
    #   arch: arm64
    #   addons:
    #     snaps:
    #       - name: multipass
    #         confinement: classic # or devmode
    #         channel: latest/beta # will be passed to --channel flag
    #       # - name: kubectl
    #       #   confinement: classic # or devmode
    #       #   channel: latest/stable # will be passed to --channel flag
    #   language: python
    #   python: 3.7
    #   before_install:
    #     - pip3 install virtualenv
    #     - virtualenv -p $(which python3) ~venvpy3
    #     - source ~venvpy3/bin/activate
    #   after_success:
    #     - deactivate

# =============================================macOS=============================================

    # #The default backend on macOS is hyperkit, wrapping Apple’s Hypervisor.framework
    # #You need macOS Yosemite, version 10.10.3 or later installed on a 2010 or newer Mac
    # #https://docs.travis-ci.com/user/reference/osx/#macos-version
    # # https://multipass.run/docs/installing-on-macos
    # # https://microk8s.io/#get-started
    # #https://multipass.run/docs/installing-on-macos
    # # https://brew.sh/
    # - name: "multipass on macOS 10.15.4 osx xcode11.5"
    #   os: osx
    #   osx_image: #installer: Error - Your CPU does not have the features necessary for Multipass. Installation cannot proceed
    #     - xcode11.5
    #     # - xcode10
    #     # - xcode9
    #   language: shell
    #   before_install:
    #     - pip install virtualenv
    #     - virtualenv -p $(which python2) ~venvpy2
    #     - source ~venvpy2/bin/activate
    #   script:
    #     - /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
    #     # - brew cask install multipass
    #     # - multipass version
    #     # - brew list --versions
    #   after_success:
    #     # - brew cask uninstall multipass
    #     - deactivate

# =============================================windows=============================================
#
# #Multipass defaults to using Hyper-V as it’s virtualization provider
# # https://multipass.run/docs/installing-on-windows
# #https://github.com/canonical/multipass/releases
# # https://microk8s.io/#get-started
# #https://github.com/canonical/multipass
#     - name: "multipass  Python 3.8 on Windows"
#       os: windows
#       language: shell
#       env:
#         - PATH=/c/Python38:/c/Python38/Scripts:$PATH
#       before_install:
#         - choco install python --version 3.8.1
#         - pip install virtualenv
#         - virtualenv $HOME/venv
#         - source $HOME/venv/Scripts/activate
#       <<: *fleet_install_tasks
#       <<: *fleet_script_tasks
#       script:
#         # - echo "choco install multipass" #- multipass (exited -1) - Error while running 'C:\ProgramData\chocolatey\lib\multipass\tools\chocolateyinstall.ps1'
#         - choco install wget
#         - wget https://github.com/canonical/multipass/releases/download/v1.2.1/multipass-1.2.1+win-win64.exe
#         - dir
#         - echo %cd%
#         - SET "PATH=%cd%;%PATH%"
#         - multipass-1.2.1+win-win64.exe version
#         - multipass version
#         - rename multipass-1.2.1+win-win64.exe multipass
#         - multipass version
#         # - multipass set local.driver=virtualbox #Multipass defaults to using Hyper-V as it’s virtualization provider
#         # - multipass launch --name microk8s-vm --mem 4G --disk 40G
#         # - multipass shell microk8s-vm
#         # - sudo microk8s status --wait-ready
#         # - sudo microk8s enable dns dashboard registry
#       after_success:
#         - deactivate
